{"mappings":"A,S,E,C,E,O,G,E,U,C,E,O,C,C,C,I,E,W,E,C,E,E,C,E,E,E,iB,A,O,I,A,C,E,S,C,E,G,K,E,O,C,C,E,C,O,C,G,K,E,C,I,E,C,C,E,A,Q,C,C,E,C,I,E,C,G,E,Q,C,C,E,O,C,C,E,C,E,E,I,C,E,O,C,E,E,O,E,E,O,A,C,I,E,A,M,uB,E,I,O,E,I,C,mB,C,C,E,Q,C,S,C,C,C,E,C,C,E,C,C,E,E,iB,C,G,A,C,E,E,Q,A,E,Q,S,C,C,C,E,O,c,C,E,O,C,W,C,I,I,E,I,A,G,E,E,W,C,E,a,C,C,GCEA,IAgBA,EAhBI,EAAU,IAAI,IAgBlB,EAfA,SAAkB,CAAO,CAAE,CAAQ,EACjC,IAAK,IAAI,EAAI,EAAG,EAAI,EAAS,MAAM,CAAG,EAAG,GAAK,EAC5C,EAAQ,GAAG,CAAC,CAAQ,CAAC,EAAE,CAAE,CACvB,QAAS,EACT,KAAM,CAAQ,CAAC,EAAI,EAAE,AACvB,EAEJ,C,GCVA,AAAA,EAAA,SAAA,QAAA,CAA8C,IAAA,IAAoB,GAAA,YAAA,GAAA,EAAI,QAAQ,GAAG,KAAK,KAAK,CAAC,0PEK1F,MAAM,EAAuB,CAC3B,CACE,UAAW,OACX,OAAQ,IAAM,SAAS,aAAa,CAAC,eACvC,EACA,CACE,UAAW,mBACX,OAAQ,IAAM,SAAS,aAAa,CAAC,oBACvC,EACA,CACE,UAAW,WACX,OAAQ,IAAM,SAAS,aAAa,CAAC,YACvC,EACA,CACE,UAAW,aACX,OAAQ,IAAM,SAAS,aAAa,CAAC,cACvC,EAED,CAUD,SAAS,EAAW,CAAY,EAC9B,IAAM,EAAQ,EAAO,IAAI,CAAC,AAAC,GAAU,EAAM,SAAS,CAAC,IAAI,CAAC,IAE1D,GAAI,EAAO,CACT,IAAM,EAAM,SAAS,cAAc,CAAC,OAChC,IACF,EAAI,SAAS,CAAG,GAChB,EAAI,WAAW,CAAC,EAAM,MAAM,IAEhC,MACE,QAAQ,IAAI,CAAC,CAAC,SAAS,EAAE,EAAK,oBAAoB,CAAC,CAEvD,CAdC,OAAe,IAAI,CANpB,SAAc,CAAY,EACxB,OAAO,OAAO,CAAC,SAAS,CAAC,CAAC,EAAG,GAAI,GACjC,EAAW,EACb,E,I,E,C,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","sources":["<anon>","node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","node_modules/@parcel/runtime-js/lib/runtime-b327b89803980ff2.js","src/index.ts","src/router.ts","src/pages/welcome/index.ts","node_modules/@parcel/runtime-js/lib/runtime-68012e65ea35fece.js","src/pages/instructions/index.ts","src/pages/play/index.ts","src/state.ts","node_modules/@parcel/runtime-js/lib/runtime-4b7a8dcd0066da5b.js","node_modules/@parcel/runtime-js/lib/runtime-6043ff7990540496.js","node_modules/@parcel/runtime-js/lib/runtime-702c7f0db60e95fc.js","src/pages/result/index.ts"],"sourcesContent":["\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\n\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\n\n      var $parcel$global = globalThis;\n    \nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequire94c2\"];\n\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequire94c2\"] = parcelRequire;\n}\n\nvar parcelRegister = parcelRequire.register;\nparcelRegister(\"27Lyk\", function(module, exports) {\n\n$parcel$export(module.exports, \"register\", () => $18c11f3350a906ea$export$6503ec6e8aabbaf, (v) => $18c11f3350a906ea$export$6503ec6e8aabbaf = v);\nvar $18c11f3350a906ea$export$6503ec6e8aabbaf;\nvar $18c11f3350a906ea$export$f7ad0328861e2f03;\n\"use strict\";\nvar $18c11f3350a906ea$var$mapping = new Map();\nfunction $18c11f3350a906ea$var$register(baseUrl, manifest) {\n    for(var i = 0; i < manifest.length - 1; i += 2)$18c11f3350a906ea$var$mapping.set(manifest[i], {\n        baseUrl: baseUrl,\n        path: manifest[i + 1]\n    });\n}\nfunction $18c11f3350a906ea$var$resolve(id) {\n    var resolved = $18c11f3350a906ea$var$mapping.get(id);\n    if (resolved == null) throw new Error('Could not resolve bundle with id ' + id);\n    return new URL(resolved.path, resolved.baseUrl).toString();\n}\n$18c11f3350a906ea$export$6503ec6e8aabbaf = $18c11f3350a906ea$var$register;\n$18c11f3350a906ea$export$f7ad0328861e2f03 = $18c11f3350a906ea$var$resolve;\n\n});\n\nvar $753c35cd4374a49a$exports = {};\n\n(parcelRequire(\"27Lyk\")).register(new URL(\"\", import.meta.url).toString(), JSON.parse(\"[\\\"dZpbI\\\",\\\"index.04134f6f.js\\\",\\\"8l2yq\\\",\\\"piedrapapelotijera.a2838792.jpg\\\",\\\"BohIV\\\",\\\"piedra.2b6b2e59.png\\\",\\\"4n4pf\\\",\\\"tijera.4b8c96df.png\\\",\\\"2FUzK\\\",\\\"papel.7c3d639f.png\\\"]\"));\n\nconst $e817d3341cf3ea9c$var$routes = [\n    {\n        pathRegex: /^\\/$/,\n        render: ()=>document.createElement('welcome-page')\n    },\n    {\n        pathRegex: /^\\/instructions$/,\n        render: ()=>document.createElement('instructions-page')\n    },\n    {\n        pathRegex: /^\\/play$/,\n        render: ()=>document.createElement('play-page')\n    },\n    {\n        pathRegex: /^\\/result$/,\n        render: ()=>document.createElement('result-page')\n    }\n];\nfunction $e817d3341cf3ea9c$var$goTo(path) {\n    window.history.pushState({}, \"\", path);\n    $e817d3341cf3ea9c$var$renderPath(path);\n}\n// Exponer la función goTo globalmente\nwindow.goTo = $e817d3341cf3ea9c$var$goTo;\nfunction $e817d3341cf3ea9c$var$renderPath(path) {\n    const route = $e817d3341cf3ea9c$var$routes.find((route)=>route.pathRegex.test(path));\n    if (route) {\n        const app = document.getElementById(\"app\");\n        if (app) {\n            app.innerHTML = \"\";\n            app.appendChild(route.render()); // Llamar a render sin parámetros\n        }\n    } else console.warn(`El path '${path}' no fue encontrado.`);\n}\nfunction $e817d3341cf3ea9c$var$getCleanPathFromURL() {\n    const basePath = '/desafio-piedra-papel-o-tijera';\n    const fullPath = window.location.pathname;\n    if (fullPath.startsWith(basePath)) return fullPath.replace(basePath, '') || '/';\n    return fullPath;\n}\nfunction $e817d3341cf3ea9c$export$cf7ee87ede64229c() {\n    const initialPath = $e817d3341cf3ea9c$var$getCleanPathFromURL();\n    $e817d3341cf3ea9c$var$renderPath(initialPath);\n}\n\n\nvar $b2dec1bdeb8a4d6f$exports = {};\n$b2dec1bdeb8a4d6f$exports = new URL(\"piedrapapelotijera.a2838792.jpg\", import.meta.url).toString();\n\n\nclass $5e365b6ace611e18$export$23191e4434a9e834 extends HTMLElement {\n    constructor(){\n        super();\n        this.shadow = this.attachShadow({\n            mode: 'open'\n        });\n    }\n    connectedCallback() {\n        this.render();\n    }\n    render() {\n        if (this.shadow) {\n            this.shadow.innerHTML = `\n                <style>\n                    body {\n                        background-color: white;\n                    }\n                    .welcome-container {\n                        width: 375px;\n                        height: 667px;\n                        display: flex;\n                        flex-direction: column;\n                        align-items: center;\n                        justify-content: center;\n                        background-image: url(${0, (/*@__PURE__*/$parcel$interopDefault($b2dec1bdeb8a4d6f$exports))});\n                        background-size: cover;\n                        background-repeat: no-repeat;\n                    }\n                    .title-container {\n                        display: flex;\n                        flex-direction: column;\n                        align-items: center;\n                        padding: 20px;\n                    }\n                    h1 {\n                        font-size: 36px;\n                        text-align: center;\n                        background: linear-gradient(to right, green, lightgreen);\n                        -webkit-background-clip: text;\n                        -webkit-text-fill-color: transparent;\n                        font-family: 'Arial Rounded MT Bold', sans-serif;\n                    }\n                    button {\n                        width: 322px;\n                        height: 87px;\n                        border: none;\n                        background: linear-gradient(to bottom, #2979FF, #2962FF);\n                        color: white;\n                        font-size: 24px;\n                        margin-top: 20px;\n                        border-radius: 10px;\n                        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\n                        text-transform: uppercase;\n                        letter-spacing: 2px;\n                        font-weight: bold;\n                    }\n                    @media (min-width: 965px) {\n                        .welcome-container {\n                            width: 1280px;\n                            height: 720px;\n                            display: flex;\n                            align-items: center;\n                            justify-content: center;\n                        }\n                    }\n                </style>\n                <div class=\"welcome-container\">\n                    <div class=\"title-container\">\n                        <h1>Piedra</h1>\n                        <h1>Papel \\xf3</h1>\n                        <h1>Tijera</h1>\n                    </div>\n                    <button id=\"start-button\">Empezar</button>\n                </div>\n            `;\n            const startButton = this.shadow.querySelector('#start-button');\n            if (startButton) startButton.addEventListener('click', ()=>{\n                window.goTo('/instructions');\n            });\n        }\n    }\n}\ncustomElements.define('welcome-page', $5e365b6ace611e18$export$23191e4434a9e834);\n\n\n\nclass $1905f0a06a008413$export$34553d2d18504c80 extends HTMLElement {\n    constructor(){\n        super();\n        this.shadow = this.attachShadow({\n            mode: 'open'\n        });\n    }\n    connectedCallback() {\n        this.render();\n    }\n    render() {\n        if (this.shadow) {\n            this.shadow.innerHTML = `\n                <style>\n                    body {\n                        background-color: white;\n                    }\n                    .instructions-container {\n                        width: 375px;\n                        height: 667px;\n                        display: flex;\n                        flex-direction: column;\n                        align-items: center;\n                        justify-content: center;\n                        background-image: url(${0, (/*@__PURE__*/$parcel$interopDefault($b2dec1bdeb8a4d6f$exports))});\n                        background-size: cover;\n                        background-repeat: no-repeat;\n                    }\n                    h3 {\n                        font-size: 24px;\n                        text-align: center;\n                        font-family: 'Arial Rounded MT Bold', sans-serif;\n                        color: black;\n                        padding: 20px;\n                    }\n                    button {\n                        width: 322px;\n                        height: 87px;\n                        border: none;\n                        background: linear-gradient(to bottom, #2979FF, #2962FF);\n                        color: white;\n                        font-size: 24px;\n                        margin-top: 20px;\n                        border-radius: 10px;\n                        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\n                        text-transform: uppercase;\n                        letter-spacing: 2px;\n                        font-weight: bold;\n                    }\n                    @media (min-width: 965px) {\n                        .instructions-container {\n                            width: 1280px;\n                            height: 720px;\n                            display: flex;\n                            align-items: center;\n                            justify-content: center;\n                        }\n                    }\n                </style>\n                <div class=\"instructions-container\">\n                    <h3>Presion\\xe1 jugar y eleg\\xed: piedra, papel o tijera antes de que pasen los 3 segundos.</h3>\n                    <button id=\"play-button\">Jugar</button>\n                </div>\n            `;\n            const playButton = this.shadow.querySelector('#play-button');\n            if (playButton) playButton.addEventListener('click', ()=>{\n                window.goTo('/play');\n            });\n        }\n    }\n}\ncustomElements.define('instructions-page', $1905f0a06a008413$export$34553d2d18504c80);\n\n\nconst $0b89d474933103bc$export$ca000e230c0caa3e = {\n    currentGame: {\n        data: {\n            currentGame: {\n                computerPlay: \"piedra\",\n                myPlay: \"piedra\"\n            },\n            history: [],\n            statistics: {\n                wins: 0,\n                losses: 0,\n                draws: 0\n            },\n            gameOver: false,\n            readyForNextRound: false\n        }\n    },\n    listeners: [],\n    getState () {\n        return this;\n    },\n    setState (newState) {\n        this.currentGame = newState.currentGame;\n        for (const cb of this.listeners)cb(newState);\n    },\n    subscribe (callback) {\n        this.listeners.push(callback);\n    },\n    setMove (myMove, computerMove) {\n        const currentState = this.getState();\n        let wins = currentState.currentGame.data.statistics.wins;\n        let losses = currentState.currentGame.data.statistics.losses;\n        let draws = currentState.currentGame.data.statistics.draws;\n        if (myMove === computerMove) draws++;\n        else if (myMove === \"piedra\" && computerMove === \"tijera\" || myMove === \"tijera\" && computerMove === \"papel\" || myMove === \"papel\" && computerMove === \"piedra\") wins++;\n        else losses++;\n        const newState = {\n            ...currentState,\n            currentGame: {\n                data: {\n                    ...currentState.currentGame.data,\n                    currentGame: {\n                        myPlay: myMove,\n                        computerPlay: computerMove\n                    },\n                    statistics: {\n                        wins: wins,\n                        losses: losses,\n                        draws: draws\n                    }\n                }\n            }\n        };\n        this.setState(newState);\n    },\n    computerPlay () {\n        const moves = [\n            \"piedra\",\n            \"papel\",\n            \"tijera\"\n        ];\n        const randomMove = moves[Math.floor(Math.random() * moves.length)];\n        return randomMove;\n    },\n    resetGame () {\n        const initialState = {\n            currentGame: {\n                data: {\n                    currentGame: {\n                        computerPlay: \"piedra\",\n                        myPlay: \"piedra\"\n                    },\n                    history: [],\n                    statistics: {\n                        wins: 0,\n                        losses: 0,\n                        draws: 0\n                    },\n                    gameOver: false,\n                    readyForNextRound: false\n                }\n            },\n            listeners: this.listeners,\n            getState: this.getState,\n            setState: this.setState,\n            subscribe: this.subscribe,\n            setMove: this.setMove,\n            computerPlay: this.computerPlay,\n            resetGame: this.resetGame\n        };\n        this.setState(initialState);\n    }\n};\n\n\nvar $d1e53bbba8da419f$exports = {};\n$d1e53bbba8da419f$exports = new URL(\"piedra.2b6b2e59.png\", import.meta.url).toString();\n\n\nvar $550ce39dcb1737b3$exports = {};\n$550ce39dcb1737b3$exports = new URL(\"tijera.4b8c96df.png\", import.meta.url).toString();\n\n\nvar $a5ae0eae90e30837$exports = {};\n$a5ae0eae90e30837$exports = new URL(\"papel.7c3d639f.png\", import.meta.url).toString();\n\n\n\nclass $c25f067dcb6340d6$export$f3065aba99394728 extends HTMLElement {\n    constructor(){\n        super();\n        this.shadow = this.attachShadow({\n            mode: 'open'\n        });\n    }\n    connectedCallback() {\n        this.render();\n    }\n    render() {\n        const shadowRoot = this.shadow;\n        if (shadowRoot) {\n            shadowRoot.innerHTML = `\n                <style>\n                    body {\n                        background-color: white;\n                    }\n                    .play-container {\n                        width: 375px;\n                        height: 667px;\n                        display: flex;\n                        flex-direction: column;\n                        align-items: center;\n                        justify-content: center;\n                        background-image: url(${0, (/*@__PURE__*/$parcel$interopDefault($b2dec1bdeb8a4d6f$exports))});\n                        background-size: cover;\n                        background-repeat: no-repeat;\n                    }\n                    .moves {\n                        display: flex;\n                        gap: 20px;\n                    }\n                    .moves button {\n                        border: none;\n                        background: transparent;\n                        padding: 0;\n                        cursor: pointer;\n                        transition: transform 0.3s ease, opacity 0.3s ease;\n                    }\n                    .moves button img {\n                        width: 50px;\n                        height: 50px;\n                        pointer-events: none;\n                    }\n                    .selected {\n                        transform: scale(1.5) translateY(-20px);\n                    }\n                    .unselected {\n                        transform: scale(0.8);\n                        opacity: 0.5;\n                    }\n                    .timer {\n                        position: relative;\n                        width: 100px;\n                        height: 100px;\n                        border: 10px solid black;\n                        border-radius: 50%;\n                        display: flex;\n                        align-items: center;\n                        justify-content: center;\n                        margin-bottom: 20px;\n                        box-sizing: border-box;\n                    }\n                    .timer span {\n                        position: absolute;\n                        color: black;\n                        font-size: 24px;\n                    }\n                    @keyframes countdown {\n                        0% {\n                            border-color: black;\n                        }\n                        100% {\n                            border-color: transparent;\n                        }\n                    }\n                    .computer-move {\n                        display: flex;\n                        justify-content: center;\n                        align-items: center;\n                        margin-top: 20px;\n                    }\n                    @media (min-width: 965px) {\n                        .play-container {\n                            width: 1280px;\n                            height: 720px;\n                            display: flex;\n                            align-items: center;\n                            justify-content: center;\n                        }\n                    }\n                </style>\n                <div class=\"play-container\">\n                    <h1>Elige tu jugada</h1>\n                    <div class=\"timer\">\n                        <span id=\"timer\">3</span>\n                    </div>\n                    <div class=\"moves\">\n                        <button id=\"piedra\"><img src=\"${0, (/*@__PURE__*/$parcel$interopDefault($d1e53bbba8da419f$exports))}\" alt=\"Piedra\"></button>\n                        <button id=\"papel\"><img src=\"${0, (/*@__PURE__*/$parcel$interopDefault($a5ae0eae90e30837$exports))}\" alt=\"Papel\"></button>\n                        <button id=\"tijera\"><img src=\"${0, (/*@__PURE__*/$parcel$interopDefault($550ce39dcb1737b3$exports))}\" alt=\"Tijera\"></button>\n                    </div>\n                    <div class=\"computer-move\" id=\"computer-move\"></div>\n                </div>\n            `;\n            const moves = shadowRoot.querySelector(\".moves\");\n            const timerElement = shadowRoot.querySelector(\"#timer\");\n            const timerContainer = shadowRoot.querySelector(\".timer\");\n            const computerMoveDiv = shadowRoot.querySelector(\"#computer-move\");\n            let timeLeft = 3;\n            timerContainer.style.animation = `countdown ${timeLeft}s linear forwards`;\n            const timerInterval = setInterval(()=>{\n                timeLeft--;\n                if (timerElement) timerElement.textContent = timeLeft.toString();\n                if (timeLeft === 0) {\n                    clearInterval(timerInterval);\n                    if (moves) moves.style.display = 'none';\n                }\n            }, 1000);\n            moves?.addEventListener(\"click\", (e)=>{\n                const target = e.target.closest('button');\n                if (target) {\n                    clearInterval(timerInterval);\n                    const buttons = shadowRoot.querySelectorAll(\".moves button\");\n                    buttons.forEach((button)=>{\n                        const img = button.querySelector('img');\n                        if (button === target) img?.classList.add('selected');\n                        else img?.classList.add('unselected');\n                    });\n                    const computerMove = (0, $0b89d474933103bc$export$ca000e230c0caa3e).computerPlay();\n                    let computerImage = '';\n                    if (computerMove === 'piedra') computerImage = (0, (/*@__PURE__*/$parcel$interopDefault($d1e53bbba8da419f$exports)));\n                    else if (computerMove === 'papel') computerImage = (0, (/*@__PURE__*/$parcel$interopDefault($a5ae0eae90e30837$exports)));\n                    else computerImage = (0, (/*@__PURE__*/$parcel$interopDefault($550ce39dcb1737b3$exports)));\n                    computerMoveDiv.innerHTML = `<img src=\"${computerImage}\" alt=\"${computerMove}\" style=\"width: 50px; height: 50px;\">`;\n                    setTimeout(()=>{\n                        (0, $0b89d474933103bc$export$ca000e230c0caa3e).setMove(target.id, computerMove);\n                        window.goTo('/result');\n                    }, 1000);\n                }\n            });\n        }\n    }\n}\ncustomElements.define('play-page', $c25f067dcb6340d6$export$f3065aba99394728);\n\n\n\n\nclass $ed60d694131b3a0e$export$2b06c2bd596f1e13 extends HTMLElement {\n    constructor(){\n        super();\n        this.shadow = this.attachShadow({\n            mode: 'open'\n        });\n    }\n    connectedCallback() {\n        this.render();\n    }\n    render() {\n        const shadowRoot = this.shadow;\n        const currentState = (0, $0b89d474933103bc$export$ca000e230c0caa3e).getState();\n        const { wins: wins, losses: losses, draws: draws } = currentState.currentGame.data.statistics;\n        const { myPlay: myPlay, computerPlay: computerPlay } = currentState.currentGame.data.currentGame;\n        // Determina el estado del juego\n        let message = \"Es un empate.\";\n        let starColor = \"yellow\"; // Default yellow for draw\n        if (myPlay === computerPlay) {\n            message = \"Es un empate.\";\n            starColor = \"yellow\";\n        } else if (myPlay === \"piedra\" && computerPlay === \"tijera\" || myPlay === \"tijera\" && computerPlay === \"papel\" || myPlay === \"papel\" && computerPlay === \"piedra\") {\n            message = \"\\xa1Ganaste!\";\n            starColor = \"green\";\n        } else {\n            message = \"Perdiste.\";\n            starColor = \"red\";\n        }\n        if (shadowRoot) {\n            shadowRoot.innerHTML = `\n                <style>\n                    body {\n                        background-color: white;\n                    }\n                    .result-container {\n                        width: 375px;\n                        height: 667px;\n                        display: flex;\n                        flex-direction: column;\n                        align-items: center;\n                        justify-content: center;\n                        background-image: url(${0, (/*@__PURE__*/$parcel$interopDefault($b2dec1bdeb8a4d6f$exports))});\n                        background-size: cover;\n                        background-repeat: no-repeat;\n                        text-align: center;\n                    }\n                    .star {\n                        position: relative;\n                        display: inline-block;\n                        color: ${starColor};\n                        font-size: 50px;\n                        margin-bottom: 20px;\n                    }\n                    .star:before, .star:after {\n                        content: '\\u{2605}';\n                    }\n                    h1, h2, p {\n                        margin: 0;\n                    }\n                    h2 {\n                        margin-top: 10px;\n                    }\n                    button {\n                        width: 322px;\n                        height: 87px;\n                        border: none;\n                        background: linear-gradient(to bottom, #2979FF, #2962FF);\n                        color: white;\n                        font-size: 24px;\n                        margin-top: 20px;\n                        border-radius: 10px;\n                        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\n                        text-transform: uppercase;\n                        letter-spacing: 2px;\n                        font-weight: bold;\n                    }\n                    @media (min-width: 965px) {\n                        .result-container {\n                            width: 1280px;\n                            height: 720px;\n                            display: flex;\n                            align-items: center;\n                            justify-content: center;\n                        }\n                    }\n                </style>\n                <div class=\"result-container\">\n                    <div class=\"star\"></div>\n                    <h1>${message}</h1>\n                    <h2>Resultados</h2>\n                    <p>Tu jugada: ${myPlay}</p>\n                    <p>Jugada de la computadora: ${computerPlay}</p>\n                    <p>Victorias: ${wins}</p>\n                    <p>Derrotas: ${losses}</p>\n                    <p>Empates: ${draws}</p>\n                    <button id=\"play-again-button\">Volver a jugar</button>\n                </div>\n            `;\n            const playAgainButton = shadowRoot.querySelector(\"#play-again-button\");\n            if (playAgainButton) playAgainButton.addEventListener(\"click\", ()=>{\n                window.goTo(\"/play\");\n            });\n        }\n    }\n}\ncustomElements.define(\"result-page\", $ed60d694131b3a0e$export$2b06c2bd596f1e13);\n\n\n(0, $e817d3341cf3ea9c$export$cf7ee87ede64229c)();\n\n\n//# sourceMappingURL=index.04134f6f.js.map\n","\"use strict\";\n\nvar mapping = new Map();\nfunction register(baseUrl, manifest) {\n  for (var i = 0; i < manifest.length - 1; i += 2) {\n    mapping.set(manifest[i], {\n      baseUrl: baseUrl,\n      path: manifest[i + 1]\n    });\n  }\n}\nfunction resolve(id) {\n  var resolved = mapping.get(id);\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n  return new URL(resolved.path, resolved.baseUrl).toString();\n}\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","require('./helpers/bundle-manifest').register(new __parcel__URL__(\"\").toString(),JSON.parse(\"[\\\"dZpbI\\\",\\\"index.04134f6f.js\\\",\\\"8l2yq\\\",\\\"piedrapapelotijera.a2838792.jpg\\\",\\\"BohIV\\\",\\\"piedra.2b6b2e59.png\\\",\\\"4n4pf\\\",\\\"tijera.4b8c96df.png\\\",\\\"2FUzK\\\",\\\"papel.7c3d639f.png\\\"]\"));","import { state, Play } from \"./state\"; // Importamos state y Play\r\nimport { initRouter } from \"./router\";\r\nimport { Welcome } from \"./pages/welcome\";\r\nimport { InstructionsPage } from \"./pages/instructions\";\r\nimport { PlayPage } from \"./pages/play\";\r\nimport { ResultPage } from \"./pages/result\";\r\nimport \"./pages/welcome/index\";\r\nimport \"./pages/instructions/index\";\r\nimport \"./pages/play/index\";\r\nimport \"./pages/result/index\";\r\n\r\ninitRouter();\r\n","type RouterPath = {\r\n    pathRegex: RegExp;\r\n    render: () => HTMLElement; // Eliminar goTo de los parámetros\r\n  };\r\n  \r\n  const routes: RouterPath[] = [\r\n    {\r\n      pathRegex: /^\\/$/,\r\n      render: () => document.createElement('welcome-page'),\r\n    },\r\n    {\r\n      pathRegex: /^\\/instructions$/,\r\n      render: () => document.createElement('instructions-page'),\r\n    },\r\n    {\r\n      pathRegex: /^\\/play$/,\r\n      render: () => document.createElement('play-page'),\r\n    },\r\n    {\r\n      pathRegex: /^\\/result$/,\r\n      render: () => document.createElement('result-page'),\r\n    },\r\n    // ... otras rutas\r\n  ];\r\n  \r\n  function goTo(path: string) {\r\n    window.history.pushState({}, \"\", path);\r\n    renderPath(path);\r\n  }\r\n  \r\n  // Exponer la función goTo globalmente\r\n  (window as any).goTo = goTo;\r\n  \r\n  function renderPath(path: string): void {\r\n    const route = routes.find((route) => route.pathRegex.test(path));\r\n  \r\n    if (route) {\r\n      const app = document.getElementById(\"app\");\r\n      if (app) {\r\n        app.innerHTML = \"\";\r\n        app.appendChild(route.render()); // Llamar a render sin parámetros\r\n      }\r\n    } else {\r\n      console.warn(`El path '${path}' no fue encontrado.`);\r\n    }\r\n  }\r\n  \r\n  function getCleanPathFromURL() {\r\n    const basePath = '/desafio-piedra-papel-o-tijera';\r\n    const fullPath = window.location.pathname;\r\n  \r\n    if (fullPath.startsWith(basePath)) {\r\n      return fullPath.replace(basePath, '') || '/';\r\n    }\r\n  \r\n    return fullPath;\r\n  }\r\n  \r\n  export function initRouter(): void {\r\n    const initialPath = getCleanPathFromURL();\r\n    renderPath(initialPath);\r\n  }\r\n\r\n\r\n\r\n  \r\n","import { state, Play } from \"../../state\";\r\nimport backgroundImage from \"../../assets/piedrapapelotijera.jpg\";\r\n\r\n\r\nexport class Welcome extends HTMLElement {\r\n    shadow: ShadowRoot | null;\r\n    constructor() {\r\n        super();\r\n        this.shadow = this.attachShadow({ mode: 'open' });\r\n    }\r\n    connectedCallback() {\r\n        this.render();\r\n    }\r\n    render() {\r\n        if (this.shadow) {\r\n            this.shadow.innerHTML = `\r\n                <style>\r\n                    body {\r\n                        background-color: white;\r\n                    }\r\n                    .welcome-container {\r\n                        width: 375px;\r\n                        height: 667px;\r\n                        display: flex;\r\n                        flex-direction: column;\r\n                        align-items: center;\r\n                        justify-content: center;\r\n                        background-image: url(${backgroundImage});\r\n                        background-size: cover;\r\n                        background-repeat: no-repeat;\r\n                    }\r\n                    .title-container {\r\n                        display: flex;\r\n                        flex-direction: column;\r\n                        align-items: center;\r\n                        padding: 20px;\r\n                    }\r\n                    h1 {\r\n                        font-size: 36px;\r\n                        text-align: center;\r\n                        background: linear-gradient(to right, green, lightgreen);\r\n                        -webkit-background-clip: text;\r\n                        -webkit-text-fill-color: transparent;\r\n                        font-family: 'Arial Rounded MT Bold', sans-serif;\r\n                    }\r\n                    button {\r\n                        width: 322px;\r\n                        height: 87px;\r\n                        border: none;\r\n                        background: linear-gradient(to bottom, #2979FF, #2962FF);\r\n                        color: white;\r\n                        font-size: 24px;\r\n                        margin-top: 20px;\r\n                        border-radius: 10px;\r\n                        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\r\n                        text-transform: uppercase;\r\n                        letter-spacing: 2px;\r\n                        font-weight: bold;\r\n                    }\r\n                    @media (min-width: 965px) {\r\n                        .welcome-container {\r\n                            width: 1280px;\r\n                            height: 720px;\r\n                            display: flex;\r\n                            align-items: center;\r\n                            justify-content: center;\r\n                        }\r\n                    }\r\n                </style>\r\n                <div class=\"welcome-container\">\r\n                    <div class=\"title-container\">\r\n                        <h1>Piedra</h1>\r\n                        <h1>Papel ó</h1>\r\n                        <h1>Tijera</h1>\r\n                    </div>\r\n                    <button id=\"start-button\">Empezar</button>\r\n                </div>\r\n            `;\r\n            const startButton = this.shadow.querySelector('#start-button');\r\n            if (startButton) {\r\n                startButton.addEventListener('click', () => {\r\n                    (window as any).goTo('/instructions');\r\n                })\r\n            }\r\n        }\r\n    }\r\n}\r\ncustomElements.define('welcome-page', Welcome);","module.exports = new __parcel__URL__(\"piedrapapelotijera.a2838792.jpg\").toString();","import { state } from \"../../state\";\r\nimport backgroundImage from \"../../assets/piedrapapelotijera.jpg\"\r\n\r\nexport class InstructionsPage extends HTMLElement {\r\n    shadow: ShadowRoot | null;\r\n    constructor() {\r\n        super();\r\n        this.shadow = this.attachShadow({ mode: 'open' });\r\n    }\r\n    connectedCallback() {\r\n        this.render();\r\n    }\r\n    render() {\r\n        if (this.shadow) {\r\n            this.shadow.innerHTML = `\r\n                <style>\r\n                    body {\r\n                        background-color: white;\r\n                    }\r\n                    .instructions-container {\r\n                        width: 375px;\r\n                        height: 667px;\r\n                        display: flex;\r\n                        flex-direction: column;\r\n                        align-items: center;\r\n                        justify-content: center;\r\n                        background-image: url(${backgroundImage});\r\n                        background-size: cover;\r\n                        background-repeat: no-repeat;\r\n                    }\r\n                    h3 {\r\n                        font-size: 24px;\r\n                        text-align: center;\r\n                        font-family: 'Arial Rounded MT Bold', sans-serif;\r\n                        color: black;\r\n                        padding: 20px;\r\n                    }\r\n                    button {\r\n                        width: 322px;\r\n                        height: 87px;\r\n                        border: none;\r\n                        background: linear-gradient(to bottom, #2979FF, #2962FF);\r\n                        color: white;\r\n                        font-size: 24px;\r\n                        margin-top: 20px;\r\n                        border-radius: 10px;\r\n                        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\r\n                        text-transform: uppercase;\r\n                        letter-spacing: 2px;\r\n                        font-weight: bold;\r\n                    }\r\n                    @media (min-width: 965px) {\r\n                        .instructions-container {\r\n                            width: 1280px;\r\n                            height: 720px;\r\n                            display: flex;\r\n                            align-items: center;\r\n                            justify-content: center;\r\n                        }\r\n                    }\r\n                </style>\r\n                <div class=\"instructions-container\">\r\n                    <h3>Presioná jugar y elegí: piedra, papel o tijera antes de que pasen los 3 segundos.</h3>\r\n                    <button id=\"play-button\">Jugar</button>\r\n                </div>\r\n            `;\r\n            const playButton = this.shadow.querySelector('#play-button');\r\n            if (playButton) {\r\n                playButton.addEventListener('click', () => {\r\n                    (window as any).goTo('/play');\r\n                });\r\n            }\r\n        }\r\n    }\r\n}\r\ncustomElements.define('instructions-page', InstructionsPage);","import { state, Play } from \"../../state\";\r\nimport piedraImage from \"../../assets/piedra.png\";\r\nimport tijeraImage from \"../../assets/tijera.png\";\r\nimport papelImage from \"../../assets/papel.png\";\r\nimport backgroundImage from \"../../assets/piedrapapelotijera.jpg\";\r\n\r\n\r\n\r\n\r\nexport class PlayPage extends HTMLElement {\r\n    shadow: ShadowRoot | null;\r\n    constructor() {\r\n        super();\r\n        this.shadow = this.attachShadow({ mode: 'open' });\r\n    }\r\n    connectedCallback() {\r\n        this.render();\r\n    }\r\n    render() {\r\n        const shadowRoot = this.shadow;\r\n        if (shadowRoot) {\r\n            shadowRoot.innerHTML = `\r\n                <style>\r\n                    body {\r\n                        background-color: white;\r\n                    }\r\n                    .play-container {\r\n                        width: 375px;\r\n                        height: 667px;\r\n                        display: flex;\r\n                        flex-direction: column;\r\n                        align-items: center;\r\n                        justify-content: center;\r\n                        background-image: url(${backgroundImage});\r\n                        background-size: cover;\r\n                        background-repeat: no-repeat;\r\n                    }\r\n                    .moves {\r\n                        display: flex;\r\n                        gap: 20px;\r\n                    }\r\n                    .moves button {\r\n                        border: none;\r\n                        background: transparent;\r\n                        padding: 0;\r\n                        cursor: pointer;\r\n                        transition: transform 0.3s ease, opacity 0.3s ease;\r\n                    }\r\n                    .moves button img {\r\n                        width: 50px;\r\n                        height: 50px;\r\n                        pointer-events: none;\r\n                    }\r\n                    .selected {\r\n                        transform: scale(1.5) translateY(-20px);\r\n                    }\r\n                    .unselected {\r\n                        transform: scale(0.8);\r\n                        opacity: 0.5;\r\n                    }\r\n                    .timer {\r\n                        position: relative;\r\n                        width: 100px;\r\n                        height: 100px;\r\n                        border: 10px solid black;\r\n                        border-radius: 50%;\r\n                        display: flex;\r\n                        align-items: center;\r\n                        justify-content: center;\r\n                        margin-bottom: 20px;\r\n                        box-sizing: border-box;\r\n                    }\r\n                    .timer span {\r\n                        position: absolute;\r\n                        color: black;\r\n                        font-size: 24px;\r\n                    }\r\n                    @keyframes countdown {\r\n                        0% {\r\n                            border-color: black;\r\n                        }\r\n                        100% {\r\n                            border-color: transparent;\r\n                        }\r\n                    }\r\n                    .computer-move {\r\n                        display: flex;\r\n                        justify-content: center;\r\n                        align-items: center;\r\n                        margin-top: 20px;\r\n                    }\r\n                    @media (min-width: 965px) {\r\n                        .play-container {\r\n                            width: 1280px;\r\n                            height: 720px;\r\n                            display: flex;\r\n                            align-items: center;\r\n                            justify-content: center;\r\n                        }\r\n                    }\r\n                </style>\r\n                <div class=\"play-container\">\r\n                    <h1>Elige tu jugada</h1>\r\n                    <div class=\"timer\">\r\n                        <span id=\"timer\">3</span>\r\n                    </div>\r\n                    <div class=\"moves\">\r\n                        <button id=\"piedra\"><img src=\"${piedraImage}\" alt=\"Piedra\"></button>\r\n                        <button id=\"papel\"><img src=\"${papelImage}\" alt=\"Papel\"></button>\r\n                        <button id=\"tijera\"><img src=\"${tijeraImage}\" alt=\"Tijera\"></button>\r\n                    </div>\r\n                    <div class=\"computer-move\" id=\"computer-move\"></div>\r\n                </div>\r\n            `;\r\n\r\n            const moves = shadowRoot.querySelector(\".moves\") as HTMLElement | null;\r\n            const timerElement = shadowRoot.querySelector(\"#timer\") as HTMLElement;\r\n            const timerContainer = shadowRoot.querySelector(\".timer\") as HTMLElement;\r\n            const computerMoveDiv = shadowRoot.querySelector(\"#computer-move\") as HTMLElement;\r\n\r\n            let timeLeft = 3;\r\n            timerContainer.style.animation = `countdown ${timeLeft}s linear forwards`;\r\n\r\n            const timerInterval = setInterval(() => {\r\n                timeLeft--;\r\n                if (timerElement) {\r\n                    timerElement.textContent = timeLeft.toString();\r\n                }\r\n                if (timeLeft === 0) {\r\n                    clearInterval(timerInterval);\r\n                    if (moves) {\r\n                        moves.style.display = 'none';\r\n                    }\r\n                }\r\n            }, 1000);\r\n\r\n            moves?.addEventListener(\"click\", (e) => {\r\n                const target = (e.target as HTMLElement).closest('button') as HTMLButtonElement;\r\n                if (target) {\r\n                    clearInterval(timerInterval);\r\n                    const buttons = shadowRoot.querySelectorAll(\".moves button\");\r\n                    buttons.forEach(button => {\r\n                        const img = button.querySelector('img');\r\n                        if (button === target) {\r\n                            img?.classList.add('selected');\r\n                        } else {\r\n                            img?.classList.add('unselected');\r\n                        }\r\n                    });\r\n\r\n                    const computerMove = state.computerPlay();\r\n                    let computerImage = '';\r\n                    if (computerMove === 'piedra') {\r\n                        computerImage = piedraImage;\r\n                    } else if (computerMove === 'papel') {\r\n                        computerImage = papelImage;\r\n                    } else {\r\n                        computerImage = tijeraImage;\r\n                    }\r\n\r\n                    computerMoveDiv.innerHTML = `<img src=\"${computerImage}\" alt=\"${computerMove}\" style=\"width: 50px; height: 50px;\">`;\r\n\r\n                    setTimeout(() => {\r\n                        state.setMove(target.id as Play, computerMove);\r\n                        (window as any).goTo('/result');\r\n                      }, 1000);\r\n                }\r\n            });\r\n        }\r\n    }\r\n}\r\ncustomElements.define('play-page', PlayPage);","type Play = \"piedra\" | \"papel\" | \"tijera\";\r\n\r\ntype GameData = {\r\n    currentGame: {\r\n        computerPlay: Play;\r\n        myPlay: Play;\r\n    };\r\n    history: never[];\r\n    statistics: {\r\n        wins: number;\r\n        losses: number;\r\n        draws: number;\r\n    };\r\n    gameOver: boolean;\r\n    readyForNextRound: boolean;\r\n};\r\n\r\ntype State = {\r\n    currentGame: {\r\n        data: GameData;\r\n    };\r\n    listeners: ((currentState: State) => void)[];\r\n    getState: () => State;\r\n    setState: (newState: State) => void;\r\n    subscribe: (callback: (currentState: State) => void) => void;\r\n    setMove: (myMove: Play, computerMove: Play) => void;\r\n    computerPlay: () => Play;\r\n    resetGame: () => void;\r\n};\r\n\r\nconst state: State = {\r\n    currentGame: {\r\n        data: {\r\n            currentGame: {\r\n                computerPlay: \"piedra\",\r\n                myPlay: \"piedra\",\r\n            },\r\n            history: [],\r\n            statistics: {\r\n                wins: 0,\r\n                losses: 0,\r\n                draws: 0,\r\n            },\r\n            gameOver: false,\r\n            readyForNextRound: false,\r\n        },\r\n    },\r\n    listeners: [],\r\n    getState() {\r\n        return this;\r\n    },\r\n    setState(newState: State) {\r\n        this.currentGame = newState.currentGame;\r\n        for (const cb of this.listeners) {\r\n            cb(newState);\r\n        }\r\n    },\r\n    subscribe(callback: (currentState: State) => void) {\r\n        this.listeners.push(callback);\r\n    },\r\n    setMove(myMove: Play, computerMove: Play) {\r\n        const currentState = this.getState();\r\n        let wins = currentState.currentGame.data.statistics.wins;\r\n        let losses = currentState.currentGame.data.statistics.losses;\r\n        let draws = currentState.currentGame.data.statistics.draws;\r\n\r\n        if (myMove === computerMove) {\r\n            draws++;\r\n        } else if (\r\n            (myMove === \"piedra\" && computerMove === \"tijera\") ||\r\n            (myMove === \"tijera\" && computerMove === \"papel\") ||\r\n            (myMove === \"papel\" && computerMove === \"piedra\")\r\n        ) {\r\n            wins++;\r\n        } else {\r\n            losses++;\r\n        }\r\n\r\n        const newState = {\r\n            ...currentState,\r\n            currentGame: {\r\n                data: {\r\n                    ...currentState.currentGame.data,\r\n                    currentGame: {\r\n                        myPlay: myMove,\r\n                        computerPlay: computerMove,\r\n                    },\r\n                    statistics: {\r\n                        wins,\r\n                        losses,\r\n                        draws,\r\n                    },\r\n                },\r\n            },\r\n        };\r\n        this.setState(newState);\r\n    },\r\n    computerPlay() {\r\n        const moves: Play[] = [\"piedra\", \"papel\", \"tijera\"];\r\n        const randomMove = moves[Math.floor(Math.random() * moves.length)];\r\n        return randomMove;\r\n    },\r\n    resetGame() {\r\n        const initialState: State = {\r\n            currentGame: {\r\n                data: {\r\n                    currentGame: {\r\n                        computerPlay: \"piedra\",\r\n                        myPlay: \"piedra\",\r\n                    },\r\n                    history: [],\r\n                    statistics: {\r\n                        wins: 0,\r\n                        losses: 0,\r\n                        draws: 0,\r\n                    },\r\n                    gameOver: false,\r\n                    readyForNextRound: false,\r\n                },\r\n            },\r\n            listeners: this.listeners,\r\n            getState: this.getState,\r\n            setState: this.setState,\r\n            subscribe: this.subscribe,\r\n            setMove: this.setMove,\r\n            computerPlay: this.computerPlay,\r\n            resetGame: this.resetGame,\r\n        };\r\n        this.setState(initialState);\r\n    },\r\n};\r\n\r\nexport { state, Play };","module.exports = new __parcel__URL__(\"piedra.2b6b2e59.png\").toString();","module.exports = new __parcel__URL__(\"tijera.4b8c96df.png\").toString();","module.exports = new __parcel__URL__(\"papel.7c3d639f.png\").toString();","import { state, Play } from \"../../state\";\r\nimport backgroundImage from \"../../assets/piedrapapelotijera.jpg\";\r\n\r\nexport class ResultPage extends HTMLElement {\r\n    shadow: ShadowRoot | null;\r\n    constructor() {\r\n        super();\r\n        this.shadow = this.attachShadow({ mode: 'open' });\r\n    }\r\n    connectedCallback() {\r\n        this.render();\r\n    }\r\n    render() {\r\n        const shadowRoot = this.shadow;\r\n        const currentState = state.getState();\r\n        const { wins, losses, draws } = currentState.currentGame.data.statistics;\r\n        const { myPlay, computerPlay } = currentState.currentGame.data.currentGame;\r\n\r\n        // Determina el estado del juego\r\n        let message = \"Es un empate.\";\r\n        let starColor = \"yellow\"; // Default yellow for draw\r\n\r\n        if (myPlay === computerPlay) {\r\n            message = \"Es un empate.\";\r\n            starColor = \"yellow\";\r\n        } else if (\r\n            (myPlay === \"piedra\" && computerPlay === \"tijera\") ||\r\n            (myPlay === \"tijera\" && computerPlay === \"papel\") ||\r\n            (myPlay === \"papel\" && computerPlay === \"piedra\")\r\n        ) {\r\n            message = \"¡Ganaste!\";\r\n            starColor = \"green\";\r\n        } else {\r\n            message = \"Perdiste.\";\r\n            starColor = \"red\";\r\n        }\r\n\r\n        if (shadowRoot) {\r\n            shadowRoot.innerHTML = `\r\n                <style>\r\n                    body {\r\n                        background-color: white;\r\n                    }\r\n                    .result-container {\r\n                        width: 375px;\r\n                        height: 667px;\r\n                        display: flex;\r\n                        flex-direction: column;\r\n                        align-items: center;\r\n                        justify-content: center;\r\n                        background-image: url(${backgroundImage});\r\n                        background-size: cover;\r\n                        background-repeat: no-repeat;\r\n                        text-align: center;\r\n                    }\r\n                    .star {\r\n                        position: relative;\r\n                        display: inline-block;\r\n                        color: ${starColor};\r\n                        font-size: 50px;\r\n                        margin-bottom: 20px;\r\n                    }\r\n                    .star:before, .star:after {\r\n                        content: '★';\r\n                    }\r\n                    h1, h2, p {\r\n                        margin: 0;\r\n                    }\r\n                    h2 {\r\n                        margin-top: 10px;\r\n                    }\r\n                    button {\r\n                        width: 322px;\r\n                        height: 87px;\r\n                        border: none;\r\n                        background: linear-gradient(to bottom, #2979FF, #2962FF);\r\n                        color: white;\r\n                        font-size: 24px;\r\n                        margin-top: 20px;\r\n                        border-radius: 10px;\r\n                        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\r\n                        text-transform: uppercase;\r\n                        letter-spacing: 2px;\r\n                        font-weight: bold;\r\n                    }\r\n                    @media (min-width: 965px) {\r\n                        .result-container {\r\n                            width: 1280px;\r\n                            height: 720px;\r\n                            display: flex;\r\n                            align-items: center;\r\n                            justify-content: center;\r\n                        }\r\n                    }\r\n                </style>\r\n                <div class=\"result-container\">\r\n                    <div class=\"star\"></div>\r\n                    <h1>${message}</h1>\r\n                    <h2>Resultados</h2>\r\n                    <p>Tu jugada: ${myPlay}</p>\r\n                    <p>Jugada de la computadora: ${computerPlay}</p>\r\n                    <p>Victorias: ${wins}</p>\r\n                    <p>Derrotas: ${losses}</p>\r\n                    <p>Empates: ${draws}</p>\r\n                    <button id=\"play-again-button\">Volver a jugar</button>\r\n                </div>\r\n            `;\r\n\r\n            const playAgainButton = shadowRoot.querySelector(\"#play-again-button\");\r\n      if (playAgainButton) {\r\n        playAgainButton.addEventListener(\"click\", () => {\r\n          (window as any).goTo(\"/play\");\r\n        });\r\n            }\r\n        }\r\n    }\r\n}\r\ncustomElements.define(\"result-page\", ResultPage);"],"names":["$parcel$interopDefault","a","__esModule","default","$parcel$global","globalThis","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","parcelRegister","Object","defineProperty","get","$18c11f3350a906ea$export$6503ec6e8aabbaf","set","v","enumerable","configurable","$18c11f3350a906ea$var$mapping","Map","baseUrl","manifest","i","length","path","URL","url","toString","JSON","parse","$e817d3341cf3ea9c$var$routes","pathRegex","render","document","createElement","$e817d3341cf3ea9c$var$renderPath","route","find","test","app","getElementById","innerHTML","appendChild","console","warn","window","goTo","history","pushState","$b2dec1bdeb8a4d6f$exports","$5e365b6ace611e18$export$23191e4434a9e834","HTMLElement","constructor","shadow","attachShadow","mode","connectedCallback","startButton","querySelector","addEventListener","customElements","define","$1905f0a06a008413$export$34553d2d18504c80","playButton","$0b89d474933103bc$export$ca000e230c0caa3e","currentGame","data","computerPlay","myPlay","statistics","wins","losses","draws","gameOver","readyForNextRound","listeners","getState","setState","newState","cb","subscribe","callback","push","setMove","myMove","computerMove","currentState","moves","Math","floor","random","resetGame","initialState","$d1e53bbba8da419f$exports","$550ce39dcb1737b3$exports","$a5ae0eae90e30837$exports","$c25f067dcb6340d6$export$f3065aba99394728","shadowRoot","timerElement","timerContainer","computerMoveDiv","timeLeft","style","animation","timerInterval","setInterval","textContent","clearInterval","display","e","target","closest","buttons","querySelectorAll","forEach","button","img","classList","add","computerImage","setTimeout","$ed60d694131b3a0e$export$2b06c2bd596f1e13","message","starColor","playAgainButton","$e817d3341cf3ea9c$var$getCleanPathFromURL","basePath","fullPath","location","pathname","startsWith","replace"],"version":3,"file":"index.04134f6f.js.map"}